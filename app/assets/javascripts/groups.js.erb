//ACTIVITY FEED
function ActivityFeedsController ($scope, $http) {
  $http.get('/achievements/newest.json?groupid=' + 1 + '&latestachievement=').success(function (data) {
    $scope.achievements = data;
    $scope.orderProp = '-id';

    var max = 0, maxIndex = -1;

    function updateMax (data) {
      for(var i=0;i<data.length;i++) {
       if(parseInt(data[i].id,10) > max) {
          max = data[i].id;
          maxIndex = i;
        }
      }
    }

    updateMax($scope.achievements);


    function recursivePoll () {
      setTimeout(function () {
        $http.get('/achievements/newest.json?groupid=' + 1 +'&latestachievement=' + max).success(function (data) {
          // Prepend the scope achievements with the new data,
          // make sure the result is only 20 items long
          $scope.achievements = data.concat($scope.achievements).splice(0, 19);
          updateMax($scope.achievements);
          $scope.$$phase || $scope.$apply();
        }).success(recursivePoll);
      }, 20000);
    }

    recursivePoll();
    
  }).error(function (error) {
    console.log(error);
  });
}

//HIGHCHARTS
$(function() {
  new Highcharts.Chart({
    chart: {
      renderTo: "user_chart"

    },
    title: {
      text: "users"
    },
    xAxis: {
      type: "time"
    },
    yAxis: {
      title: {
        text: "stars"
      }
    },
    series: [{
      // pointInterval: series_interval,
      name: 'one',
      data: [1, 0, 4, 5, 6, 7]
    }, {
      // pointInterval: series_interval,
      name: 'two',
      data: [9, 4, 5, 0, 0, 7]
    }]
  });
});